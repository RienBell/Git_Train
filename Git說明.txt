安裝完成後，需要輸入使用者名稱與Email：
	。git config --global user.name "名稱"
	。git config --global user.mail "自己的Email"

創建初始的git倉庫
	。git init

如果【新增】、【修改完成後】文件需要加入追蹤(加入git存放庫)
	。git add . // 【.】代表全部的意思
	。git add 文件名稱

當然如果想要在add之前看看狀態：
	。git status
	看到紅色代表沒有追蹤/修改完成但還沒add
	綠色代表有追蹤

暫存(存檔)
	。git commit -m "註解：這個存檔修改了甚麼或是在做甚麼"

暫存完成後可以看 有儲存哪些存檔：
	。git log [options]
		1.【--all】顯示所有分支
		2.【--pretty=oneline】將提交訊息顯示為一行
		3.【--abbrev-commit】使輸出的commitId更簡短
		4.【--graph】以圖的形式顯示
	舉例：
		【git log --pretty=oneline --abbrev-commit --all --graph --decorate】
		上面的指令太長可以用別名

版本回朔：
	。git reset --hard [commit ID，這裡是ID不是名稱]
	舉例：
		有兩個存檔【a123456】、【a234567】，目前在a2...7，要退回到a1...6
		--> $ git reset --hard a123456
		如果這時候用【git log】會發現，前面的【a234567】不見了
		怎麼辦呢？
		用【git reflog】這個可以知道你所有的操作

不想要git管理的檔案
	如果你的檔案很多需要管理，但是有一些你不要做管理怎麼做？
	先創建檔案【.gitignore】
	內容：
		*.a //代表副檔名為a的不添加






